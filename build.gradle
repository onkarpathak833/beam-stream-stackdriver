buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.0.0'
    }
}


plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

group 'beam-streaming'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8


apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    ivy {
        url 'http://dl.bintray.com/content/johnrengelman/gradle-plugins'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/org.apache.beam/beam-sdks-java-maven-archetypes-starter
    compile group: 'org.apache.beam', name: 'beam-sdks-java-maven-archetypes-starter', version: '2.14.0'

    // https://mvnrepository.com/artifact/com.google.auth/google-auth-library-oauth2-http
    compile group: 'com.google.auth', name: 'google-auth-library-oauth2-http', version: '0.16.2'

    // https://mvnrepository.com/artifact/org.apache.beam/beam-sdks-java-io-google-cloud-platform
    compile group: 'org.apache.beam', name: 'beam-sdks-java-io-google-cloud-platform', version: '2.14.0'

    // https://mvnrepository.com/artifact/org.apache.beam/beam-runners-google-cloud-dataflow-java
    compile group: 'org.apache.beam', name: 'beam-runners-google-cloud-dataflow-java', version: '2.14.0'

    // https://mvnrepository.com/artifact/org.apache.beam/beam-sdks-java-io-kafka
    compile group: 'org.apache.beam', name: 'beam-sdks-java-io-kafka', version: '2.14.0'

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.1.0'

    // https://mvnrepository.com/artifact/com.google.cloud/google-cloud-storage
    compile group: 'com.google.cloud', name: 'google-cloud-storage', version: '1.86.0'

}


task customFatJar(type: org.gradle.jvm.tasks.Jar) {
    baseName = "beam-job"
    version = "1.0.0"
    classifier = ''
    manifest {
        attributes(
                'Main-Class': "com.example.onkar.MyApplication"
        )
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }

    }
    with jar

}
